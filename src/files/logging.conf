auth_debug = yes
auth_debug_passwords = yes
auth_verbose = yes
auth_verbose_passwords = yes
#debug_level = yes
mail_debug = yes
verbose_ssl = yes
doveadm_password = moo

service stats {
  inet_listener http {
    port = 9900
    address = 127.0.0.1
  }
}

metric auth_success {
  filter = (event=auth_request_finished AND success=yes)
}

metric imap_command {
  filter = event=imap_command_finished
  group_by = cmd_name tagged_reply_state
}

metric smtp_command {
  filter = event=smtp_server_command_finished
  group_by = cmd_name status_code duration:exponential:1:5:10
}

metric mail_delivery {
  filter = event=mail_delivery_finished
  group_by = duration:exponential:1:5:10
}

event_exporter log {
  format = json
  format_args = time-rfc3339
  transport = log
}

metric imap_commands {
  exporter = log
  filter = event=imap_command_finished
}

# -----------------------------------------


metric imap_select_no {
  filter = event=imap_command_finished AND cmd_name=SELECT AND \
    tagged_reply_state=NO
}

metric imap_select_no_notfound {
  filter = event=imap_command_finished AND cmd_name=SELECT AND \
    tagged_reply="NO*Mailbox doesn't exist:*"
}

metric storage_http_gets {
  filter = event=http_request_finished AND category=storage AND \
    method=get
}

# generate per-command metrics on successful commands
metric imap_command {
  filter = event=imap_command_finished AND \
    tagged_reply_state=OK
  group_by = cmd_name
}


metric push_notifications {
  filter = event=push_notification_finished
}

# for OX driver
metric push_notification_http_finished {
  filter = event=http_request_finished AND category=push_notification
}

